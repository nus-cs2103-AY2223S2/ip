plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

task coverage(type: JacocoReport) {
    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)
    classDirectories.from files(sourceSets.main.output)
    executionData.from files(jacocoTestReport.executionData)
    afterEvaluate {
        classDirectories.from files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/*.jar'])
        })
    }
    reports {
        html.required = true
        xml.required = true
    }
}

dependencies {
    implementation 'junit:junit:4.13.1'
    implementation 'junit:junit:4.13.1'
    String jUnitVersion = '5.4.0'
    String javaFxVersion = '11'
    
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    mainClassName = "Duke"
}

shadowJar {
    archiveBaseName = "duke"
    archiveClassifier = null
}

run{
    standardInput = System.in
}

checkstyle {
    toolVersion = '10.3.4'
}